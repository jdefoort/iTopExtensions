<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.6">
	<classes>
		<class id="BuildingRequest" _delta="define">
			<parent>Ticket</parent>
			<properties>
				<comment><![CDATA[/**
 * Persistent classes for a CMDB
 *
 * @copyright   Copyright (C) 2010-2012 Combodo SARL
 * @license     http://opensource.org/licenses/AGPL-3.0
 */]]></comment>

				<category>bizmodel,searchable,requestmgmt</category>
				<abstract>false</abstract>
				<key_type>autoincrement</key_type>
				<db_table>ticket_buildingrequest</db_table>
				<db_key_field>id</db_key_field>
				<db_final_class_field/>
				<naming>
					<attributes>
						<attribute id="ref"/>
					</attributes>
				</naming>
				<display_template/>
				<icon>images/user-request.png</icon>
				<reconciliation>
					<attributes>
						<attribute id="ref"/>
					</attributes>
				</reconciliation>
				<order>
					<columns>
						<column id="ref" ascending="false"/>
					</columns>
				</order>
			</properties>
			<fields>
				<field id="status" xsi:type="AttributeEnum">
					<always_load_in_tables>true</always_load_in_tables>
					<values>
						<value id="new">new</value>
						<value id="waiting_for_approval">waiting_for_approval</value>
						<value id="approved">approved</value>
						<value id="rejected">rejected</value>
						<value id="assigned">assigned</value>
						<value id="pending">pending</value>
						<value id="resolved">resolved</value>
						<value id="closed">closed</value>
					</values>
					<sql>status</sql>
					<default_value>new</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="request_type" xsi:type="AttributeEnum">
					<values>
						<value id="service_request">service_request</value>
					</values>
					<sql>request_type</sql>
					<default_value>service_request</default_value>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="impact" xsi:type="AttributeEnum">
					<values>
						<value id="1">1</value>
						<value id="2">2</value>
						<value id="3">3</value>
					</values>
					<sql>impact</sql>
					<default_value>1</default_value>
					<is_null_allowed>false</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="priority" xsi:type="AttributeEnum">
					<values>
						<value id="1">1</value>
						<value id="2">2</value>
						<value id="3">3</value>
						<value id="4">4</value>
					</values>

					<sql>priority</sql>
					<default_value>4</default_value>
					<is_null_allowed>false</is_null_allowed>
				</field>
				<field id="origin" xsi:type="AttributeEnum">
					<values>
						<value id="mail">mail</value>
						<value id="phone">phone</value>
						<value id="portal">portal</value>
						<value id="in_person">in_person</value>
						<value id="by_appointment">by_appointment</value>
						<value id="letter">letter</value>
						<value id="ticket_booth">ticket_booth</value>
					</values>
					<sql>origin</sql>
					<default_value>phone</default_value>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="site_visit" xsi:type="AttributeEnum">
					<values>
						<value id="not_done">not_done</value>
						<value id="done">done</value>
						<value id="to_do">to_do</value>
						<value id="will_not_do">will_not_do</value>
					</values>
					<sql>site_visit</sql>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="site_visit_w_cops" xsi:type="AttributeEnum">
					<values>
						<value id="not_done">not_done</value>
						<value id="done">done</value>
						<value id="to_do">to_do</value>
						<value id="will_not_do">will_not_do</value>
					</values>
					<sql>site_visit_w_cops</sql>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="remind_citizen" xsi:type="AttributeEnum">
					<values>
						<value id="not_done">not_done</value>
						<value id="done">done</value>
						<value id="to_do">to_do</value>
						<value id="will_not_do">will_not_do</value>
					</values>
					<sql>remind_citizen</sql>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="warrant" xsi:type="AttributeEnum">
					<values>
						<value id="not_done">not_done</value>
						<value id="done">done</value>
						<value id="to_do">to_do</value>
						<value id="will_not_do">will_not_do</value>
					</values>
					<sql>warrant</sql>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="crab_address_id" xsi:type="AttributeExternalKey">
					<sql>crab_address_id</sql>
					<on_target_delete>DEL_MANUAL</on_target_delete>
					<target_class>CrabAddress</target_class>
					<is_null_allowed>true</is_null_allowed>
					<!-- No filter on 'in use'. Tickets could be historical, associated with addresses no longer in use -->
				</field>
				<field id="geom" xsi:type="AttributeGeometry" _delta="define">
					<sql>geom</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
					<format>WKT|Point,LineString,Polygon|EPSG:3857</format>
				</field>
				<field id="approver_id" xsi:type="AttributeExternalKey">
					<filter><![CDATA[SELECT Person WHERE org_id= :this->org_id]]></filter>
					<dependencies>
						<attribute id="org_id"/>
					</dependencies>
					<sql>approver_id</sql>
					<target_class>Person</target_class>
					<is_null_allowed>true</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
				</field>
				<field id="approver_email" xsi:type="AttributeExternalField">
					<extkey_attcode>approver_id</extkey_attcode>
					<target_attcode>email</target_attcode>
				</field>					   
				<field id="servicesubcategory_id" xsi:type="AttributeExternalKey">
					<filter><![CDATA[SELECT ServiceSubcategory WHERE service_name = 'Omgeving helpdesk' AND status != 'obsolete']]></filter>
					<dependencies>	  
						<attribute id="request_type"/>
					</dependencies>
					<sql>servicesubcategory_id</sql>
					<target_class>ServiceSubcategory</target_class>
					<is_null_allowed>true</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
					<allow_target_creation>false</allow_target_creation>
					<jointype/>
				</field>
				<field id="servicesubcategory_name" xsi:type="AttributeExternalField">
					<extkey_attcode>servicesubcategory_id</extkey_attcode>
					<target_attcode>name</target_attcode>
				</field>
				<field id="assignment_date" xsi:type="AttributeDateTime">
					<sql>assignment_date</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="resolution_date" xsi:type="AttributeDateTime">
					<sql>resolution_date</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="last_pending_date" xsi:type="AttributeDateTime">
					<sql>last_pending_date</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="cumulatedpending" xsi:type="AttributeStopWatch">
					<states>
						<state id="pending"/>
					</states>
					<working_time/>
					<thresholds/>
					<goal/>
				</field>
				<field id="time_spent" xsi:type="AttributeDuration">
					<sql>time_spent</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="building_date" xsi:type="AttributeDate">
					<sql>building_date</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="solution" xsi:type="AttributeText">
					<sql>solution</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="parent_request_id" xsi:type="AttributeExternalKey">
					<filter><![CDATA[SELECT BuildingRequest WHERE id != :this->id AND status NOT IN ('rejected','resolved','closed')]]></filter>
					<dependencies>
					</dependencies>
					<sql>parent_request_id</sql>
					<target_class>BuildingRequest</target_class>
					<is_null_allowed>true</is_null_allowed>
					<on_target_delete>DEL_MANUAL</on_target_delete>
				</field>
				<field id="parent_request_ref" xsi:type="AttributeExternalField">
					<extkey_attcode>parent_request_id</extkey_attcode>
					<target_attcode>ref</target_attcode>
				</field>
				<field id="related_request_list" xsi:type="AttributeLinkedSet">
					<linked_class>BuildingRequest</linked_class>
					<ext_key_to_me>parent_request_id</ext_key_to_me>
					<edit_mode>add_remove</edit_mode>
					<count_min>0</count_min>
					<count_max>0</count_max>
				</field>
				<field id="public_log" xsi:type="AttributeCaseLog">
					<sql>public_log</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="user_comment" xsi:type="AttributeText">
					<sql>user_commment</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<field id="reminder" xsi:type="AttributeDate">
					<sql>reminder</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
					<display_style>list</display_style>
				</field>
				<field id="caller_phone" xsi:type="AttributeExternalField" _delta="define">
					<extkey_attcode>caller_id</extkey_attcode>
					<target_attcode>phone</target_attcode>
					<dependencies>
						<attribute id="phone"/>
					</dependencies>
				</field>
			</fields>
			<lifecycle>
				<highlight_scale>
					<item id="warning">
						<rank>1</rank>
						<color>HIGHLIGHT_CLASS_WARNING</color>
						<icon>images/user-request-deadline.png</icon>
					</item>
					<item id="critical">
						<rank>2</rank>
						<color>HIGHLIGHT_CLASS_CRITICAL</color>
						<icon>images/user-request-escalated.png</icon>
					</item>
					<item id="closed">
						<rank>3</rank>
						<color>HIGHLIGHT_CLASS_NONE</color>
						<icon>images/user-request-closed.png</icon>
					</item>
				</highlight_scale>
				<attribute>status</attribute>
				<stimuli>
					<stimulus id="ev_assign" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_reassign" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_approve" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_reject" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_pending" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_timeout" xsi:type="StimulusInternal"/>
					<stimulus id="ev_autoresolve" xsi:type="StimulusInternal"/>
					<stimulus id="ev_autoclose" xsi:type="StimulusInternal"/>
					<stimulus id="ev_resolve" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_close" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_reopen" xsi:type="StimulusUserAction"/>
					<stimulus id="ev_wait_for_approval" xsi:type="StimulusUserAction"/>
				</stimuli>
				<states>
					<state id="new">
						<flags>
							<attribute id="ref">
								<read_only/>
							</attribute>
							<attribute id="org_id">
								<mandatory/>
							</attribute>
							<attribute id="caller_id">
								<mandatory/>
							</attribute>
							<attribute id="agent_id">
								<hidden/>
							</attribute>
							<attribute id="priority">
								<read_only/>
							</attribute>
							<attribute id="start_date">
								<read_only/>
							</attribute>
							<attribute id="last_update">
								<read_only/>
							</attribute>
							<attribute id="close_date">
								<hidden/>
							</attribute>
							<attribute id="approver_id">
								<hidden/>
							</attribute>
							<attribute id="assignment_date">
								<hidden/>
							</attribute>
							<attribute id="resolution_date">
								<hidden/>
							</attribute>
							<attribute id="last_pending_date">
								<hidden/>
							</attribute>
							<attribute id="time_spent">
								<hidden/>
							</attribute>
							<attribute id="solution">
								<hidden/>
							</attribute>
							<attribute id="user_comment">
								<hidden/>
							</attribute>
							<attribute id="public_log">
								<hidden/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_assign">
								<target>assigned</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">assignment_date</param>
										</params>
									</action>
								</actions>
							</transition>
							<transition id="ev_wait_for_approval">
								<target>waiting_for_approval</target>
								<actions/>
							</transition>
							<transition id="ev_autoresolve">
								<target>resolved</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">resolution_date</param>
										</params>
									</action>
									<action>
										<verb>SetElapsedTime</verb>
										<params>
											<param xsi:type="attcode">time_spent</param>
											<param xsi:type="attcode">start_date</param>
											<param xsi:type="string">DefaultWorkingTimeComputer</param>
										</params>
									</action>
									<action>
										<verb>ResolveChildTickets</verb>
										<params/>
									</action>
								</actions>
							</transition>
						</transitions>
					</state>
					<state id="assigned">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="team_id">
								<read_only/>
							</attribute>
							<attribute id="agent_id">
								<mandatory/>
								<must_prompt/>
								<read_only/>
							</attribute>
							<attribute id="approver_id">
								<read_only/>
							</attribute>
							<attribute id="assignment_date">
								<read_only/>
							</attribute>
							<attribute id="caller_id"/>
							<attribute id="public_log"/>
						</flags>
						<transitions>
							<transition id="ev_resolve">
								<target>resolved</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">resolution_date</param>
										</params>
									</action>
									<action>
										<verb>SetElapsedTime</verb>
										<params>
											<param xsi:type="attcode">time_spent</param>
											<param xsi:type="attcode">start_date</param>
											<param xsi:type="string">DefaultWorkingTimeComputer</param>
										</params>
									</action>
									<action>
										<verb>ResolveChildTickets</verb>
										<params/>
									</action>
								</actions>
							</transition>
							<transition id="ev_reassign">
								<target>assigned</target>
								<flags>
									<attribute id="agent_id">
										<must_change/>
									</attribute>
								</flags>
								<actions/>
							</transition>
							<transition id="ev_timeout">
								<target>escalated_ttr</target>
								<actions/>
							</transition>
							<transition id="ev_autoresolve">
								<target>resolved</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">resolution_date</param>
										</params>
									</action>
									<action>
										<verb>SetElapsedTime</verb>
										<params>
											<param xsi:type="attcode">time_spent</param>
											<param xsi:type="attcode">start_date</param>
											<param xsi:type="string">DefaultWorkingTimeComputer</param>
										</params>
									</action>
									<action>
										<verb>ResolveChildTickets</verb>
										<params/>
									</action>
								</actions>
							</transition>
						</transitions>
					</state>
					<state id="waiting_for_approval">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="approver_id">
								<must_prompt/>
							</attribute>
							<attribute id="team_id"/>
						</flags>
						<transitions>
							<transition id="ev_approve">
								<target>approved</target>
								<actions/>
							</transition>
							<transition id="ev_reject">
								<target>rejected</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="approved">
						<inherit_flags_from>waiting_for_approval</inherit_flags_from>
						<flags>
							<attribute id="approver_id">
								<read_only/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_assign">
								<target>assigned</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">assignment_date</param>
										</params>
									</action>
								</actions>
							</transition>
							<transition id="ev_autoresolve">
								<target>resolved</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">resolution_date</param>
										</params>
									</action>
									<action>
										<verb>SetElapsedTime</verb>
										<params>
											<param xsi:type="attcode">time_spent</param>
											<param xsi:type="attcode">start_date</param>
											<param xsi:type="string">DefaultWorkingTimeComputer</param>
										</params>
									</action>
									<action>
										<verb>ResolveChildTickets</verb>
										<params/>
									</action>
								</actions>
							</transition>
						</transitions>
					</state>
					<state id="rejected">
						<inherit_flags_from>new</inherit_flags_from>
						<flags>
							<attribute id="team_id"/>
						</flags>
						<transitions>
							<transition id="ev_reopen">
								<target>new</target>
								<actions/>
							</transition>
						</transitions>
					</state>
					<state id="pending">
						<inherit_flags_from>assigned</inherit_flags_from>
						<flags>
							<attribute id="last_pending_date">
								<read_only/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_assign">
								<target>assigned</target>
								<actions>
								</actions>
							</transition>
							<transition id="ev_autoresolve">
								<target>resolved</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">resolution_date</param>
										</params>
									</action>
									<action>
										<verb>SetElapsedTime</verb>
										<params>
											<param xsi:type="attcode">time_spent</param>
											<param xsi:type="attcode">start_date</param>
											<param xsi:type="string">DefaultWorkingTimeComputer</param>
										</params>
									</action>
									<action>
										<verb>ResolveChildTickets</verb>
										<params/>
									</action>
								</actions>
							</transition>
						</transitions>
					</state>
					<state id="resolved">
						<highlight>
							<code>closed</code>
						</highlight>
						<inherit_flags_from>assigned</inherit_flags_from>
						<flags>
							<attribute id="caller_id"/>
							<attribute id="crab_address_id"/>
							<attribute id="origin">
								<read_only/>
							</attribute>
							<attribute id="servicesubcategory_id">
								<must_prompt/>
							</attribute>
							<attribute id="parent_request_id">
								<read_only/>
							</attribute>
							<attribute id="public_log">
								<read_only/>
							</attribute>
							<attribute id="description">
								<read_only/>
							</attribute>
							<attribute id="org_id"/>
							<attribute id="team_id">
								<read_only/>
							</attribute>
							<attribute id="agent_id">
								<read_only/>
							</attribute>
							<attribute id="resolution_date">
								<read_only/>
							</attribute>
							<attribute id="reminder">
								<read_only/>
							</attribute>
							<attribute id="building_date">
								<read_only/>
							</attribute>
							<attribute id="site_visit">
								<read_only/>
							</attribute>
							<attribute id="site_visit_w_cops">
								<read_only/>
							</attribute>
							<attribute id="remind_citizen">
								<read_only/>
							</attribute>
							<attribute id="warrant">
								<read_only/>
							</attribute>
							<attribute id="time_spent">
								<read_only/>
							</attribute>
							<attribute id="solution">
								<mandatory/>
								<must_prompt/>
							</attribute>
						</flags>
						<transitions>
							<transition id="ev_close">
								<target>closed</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">close_date</param>
										</params>
									</action>
								</actions>
							</transition>
							<transition id="ev_reopen">
								<target>assigned</target>
								<actions>
								</actions>
							</transition>
							<transition id="ev_autoresolve">
								<target>resolved</target>
								<actions>
									<action>
										<verb>SetCurrentDate</verb>
										<params>
											<param xsi:type="attcode">resolution_date</param>
										</params>
									</action>
									<action>
										<verb>SetElapsedTime</verb>
										<params>
											<param xsi:type="attcode">time_spent</param>
											<param xsi:type="attcode">start_date</param>
											<param xsi:type="string">DefaultWorkingTimeComputer</param>
										</params>
									</action>
									<action>
										<verb>ResolveChildTickets</verb>
										<params/>
									</action>
								</actions>
							</transition>
						</transitions>
					</state>
					<state id="closed">
						<highlight>
							<code>closed</code>
						</highlight>
						<inherit_flags_from>resolved</inherit_flags_from>
						<flags>
							<attribute id="private_log">
								<read_only/>
							</attribute>
							<attribute id="public_log">
								<read_only/>
							</attribute>
							<attribute id="functionalcis_list">
								<read_only/>
							</attribute>
							<attribute id="contacts_list">
								<read_only/>
							</attribute>
							<attribute id="servicesubcategory_id">
								<read_only/>
							</attribute>
							<attribute id="close_date">
								<read_only/>
							</attribute>
							<attribute id="reminder">
								<read_only/>
							</attribute>
							<attribute id="building_date">
								<read_only/>
							</attribute>
							<attribute id="solution">
								<read_only/>
							</attribute>
							<attribute id="site_visit">
								<read_only/>
							</attribute>
							<attribute id="site_visit_w_cops">
								<read_only/>
							</attribute>
							<attribute id="remind_citizen">
								<read_only/>
							</attribute>
							<attribute id="warrant">
								<read_only/>
							</attribute>
							<attribute id="user_comment">
								<read_only/>
								<must_prompt/>
							</attribute>
							</flags>
							<transitions>
								<transition id="ev_reopen">
									<target>assigned</target>
									<actions>
									</actions>
								</transition>
							</transitions>							
						</state>
					</states>
				</lifecycle>
				<methods>
					<method id="SetAssignedDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetAssignedDate($sStimulusCode)
	{
		$this->Set('assignment_date', time());
		return true;
	}]]></code>
					</method>
					<method id="SetLastPendingDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetLastPendingDate($sStimulusCode)
	{
		$this->Set('last_pending_date', time());
		return true;
	}]]></code>
					</method>
					<method id="SetResolveDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() and SetElapsedTime() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetResolveDate($sStimulusCode)
	{
		$this->Set('resolution_date', time());
                $iTimeSpent = time() - AttributeDateTime::GetAsUnixSeconds($this->Get('start_date'));
		$this->Set('time_spent', $iTimeSpent);
		return true;
	}]]></code>
					</method>
					<method id="SetClosureDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetClosureDate($sStimulusCode)
	{
		$this->Set('close_date', time());
		return true;
	}]]></code>
					</method>
					<method id="SetApprover">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentUser() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetApprover($sStimulusCode)
	{
		$this->Set('approver_id', UserRights::GetUserId());
		return true;
	}]]></code>
					</method>
					<method id="DoCheckToWrite">
						<static>false</static>
						<access>public</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[public function DoCheckToWrite()
  {
    parent::DoCheckToWrite();
    if (!$this->IsNew() && ($this->Get('parent_request_id') == $this->GetKey()))
    {
      $this->m_aCheckIssues[] = Dict::Format('Class:BuildingRequest/Error:CannotAssignParentRequestIdToSelf');
    }
  }]]></code>
					</method>
					<method id="ComputeValues">
						<static>false</static>
						<access>public</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[	public function ComputeValues()
	{

		
		return parent::ComputeValues();
	}]]></code>
					</method>

					<method id="resolveChilds">
						<comment><![CDATA[/**
	 * To be deprecated: use ResolveChildTickets() instead
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function resolveChilds($sStimulusCode)
	{
				
		$sOQL = "SELECT BuildingRequest WHERE parent_request_id=:ticket";
		$oChildRequestSet = new DBObjectSet(DBObjectSearch::FromOQL($sOQL),
						array(),
						array(
							'ticket' => $this->GetKey(),
							)
						);
		while($oRequest = $oChildRequestSet->Fetch())
		{
			if ( $oRequest->Get('status') != 'resolved')
			{
				$oRequest->set('servicesubcategory_id',$this->Get('servicesubcategory_id'));	
				$oRequest->set('team_id',$this->Get('team_id'));
				$oRequest->set('agent_id',$this->Get('agent_id'));	
				$oRequest->set('solution','Automatically resolved by request:[[BuildingRequest:'.$this->Get('ref').']]');
				$oRequest->ApplyStimulus('ev_autoresolve');
				$oRequest->DBUpdate();
			}
		}
		return true;

	}]]></code>
					</method>
					<method id="ResolveChildTickets">
						<comment><![CDATA[/**
	 * Cascade the resolution to child User Request
	 * @return true (returning false would stop the ongoing transition)
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<arguments>
						</arguments>
						<code><![CDATA[	public function ResolveChildTickets()
	{
        static $aTickets = array(); // prevent infinite recursion
    
		// Automatically resolve child requests
		$sOQL = "SELECT BuildingRequest WHERE parent_request_id = :ticket AND status != 'resolved'";
		$oChildRequestSet = new DBObjectSet(DBObjectSearch::FromOQL($sOQL), array(), array('ticket' => $this->GetKey()));
		while($oRequest = $oChildRequestSet->Fetch())
		{
            if (!array_key_exists($oRequest->GetKey(), $aTickets))
            {
                $aTickets[$oRequest->GetKey()] = true;
			    $oRequest->ResolveFrom($this);
            }
		}
		return true;
	}]]></code>
					</method>
					<method id="ResolveFrom">
						<comment><![CDATA[/**
	 * Resolve the ticket from another resolved ticket
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>Internal</type>
						<code><![CDATA[	public function ResolveFrom($oParentTicket)
	{
		if ($this->Get('status') != 'resolved')
		{
			$this->Set('servicesubcategory_id', $oParentTicket->Get('servicesubcategory_id'));	
			$this->Set('team_id', $oParentTicket->Get('team_id'));
			$this->Set('agent_id', $oParentTicket->Get('agent_id'));
			$sParent = '[['.get_class($oParentTicket).':'.$oParentTicket->Get('ref').']]';
			$this->Set('solution', Dict::Format('Tickets:ResolvedFrom', $sParent, MetaModel::GetName(get_class($oParentTicket))));
			$this->ApplyStimulus('ev_autoresolve');
			$this->DBUpdate();
		}
	}]]></code>
					</method>
					<method id="UpdateChildRequestLog">
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function UpdateChildRequestLog()
	{
		$oLog = $this->Get('public_log');
		$sLogPublic = $oLog->GetModifiedEntry('html');
		if ($sLogPublic != '')
		{
			$sOQL = "SELECT BuildingRequest WHERE parent_request_id=:ticket";
			$oChildRequestSet = new DBObjectSet(DBObjectSearch::FromOQL($sOQL),
							array(),
							array(
								'ticket' => $this->GetKey(),
								)
							);
			while($oRequest = $oChildRequestSet->Fetch())
			{
				$oRequest->set('public_log',$sLogPublic);
				$oRequest->DBUpdate();
			}

		}
		$oLog = $this->Get('private_log');
		$sLogPrivate = $oLog->GetModifiedEntry('html');
		if ($sLogPrivate != '')
		{
			$sOQL = "SELECT BuildingRequest WHERE parent_request_id=:ticket";
			$oChildRequestSet = new DBObjectSet(DBObjectSearch::FromOQL($sOQL),
							array(),
							array(
								'ticket' => $this->GetKey(),
								)
							);
			while($oRequest = $oChildRequestSet->Fetch())
			{
				$oRequest->set('private_log',$sLogPrivate);
				$oRequest->DBUpdate();
			}
		}
		return true;

	}]]></code>
					</method>
					<method id="ComputeImpactedItems">
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[
    public function ComputeImpactedItems()
	{
        // This method is kept for backward compatibility
        // in case a delta redefines it, but you may call
        // UpdateImpactedItems directly
		$this->UpdateImpactedItems();
	}]]></code>
					</method>
					<method id="OnInsert">
						<static>false</static>
						<access>protected</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[
    protected function OnInsert()
	{
		$this->ComputeImpactedItems();
		$this->Set('last_update', time());
		$this->Set('start_date', time());
			// Dealing with a new TechnicalRequest, so new crab_address_id
		// If no geometry was drawn AND a crab_address_id was selected: overwrite geometry
		$bCopyGeometryFromCrabAddress = ($this->Get('geom') == '' && (Int)$this->Get('crab_address_id') > 0);
		
		if($bCopyGeometryFromCrabAddress == true) {
			
			$sQuery = 'SELECT CrabAddress WHERE id = '.$this->Get('crab_address_id');
			$oSet_CrabAddresses = new CMDBObjectSet(DBObjectSearch::FromOQL($sQuery));
			
			while($oAddress = $oSet_CrabAddresses->Fetch()) {
				$this->Set('geom', $oAddress->Get('geom'));
			}
		}	
		
	}]]></code>
					</method>
					<method id="OnUpdate">
						<static>false</static>
						<access>protected</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[
    protected function OnUpdate()
	{
        parent::OnUpdate();
        $aChanges = $this->ListChanges();
        if (array_key_exists('functionalcis_list', $aChanges))
        {
            $this->UpdateImpactedItems();
        }
		$this->Set('last_update', time());
		$this->UpdateChildRequestLog();
		
		// geometry is now 'empty' (was already empty or has now been reset)
		// crab_address_id is set AND has changed?
		$bCopyGeometryFromCrabAddress = ($this->Get('geom') == '' && array_key_exists('crab_address_id', $aChanges) == true && (Int)$this->Get('crab_address_id') > 0);
		
		if($bCopyGeometryFromCrabAddress == true) {
			
			$sQuery = 'SELECT CrabAddress WHERE id = '.$this->Get('crab_address_id');
			$oSet_CrabAddresses = new CMDBObjectSet(DBObjectSearch::FromOQL($sQuery));
			
			while($oAddress = $oSet_CrabAddresses->Fetch()) {
				$this->Set('geom', $oAddress->Get('geom'));
			}
			
		}
					
		
	}]]></code>
					</method>



					<method id="DisplayBareRelations" _delta="define">
						<static>false</static>
						<access>public</access>
						<type>Overload-cmdbAbstractObject</type>
						<code><![CDATA[      public function DisplayBareRelations(WebPage $oPage, $bEditMode = false)
					{
						parent::DisplayBareRelations($oPage, $bEditMode);
	 
	
						// Intention was an iframe, but it's giving security warnings and doesn't work properly (InfraGIS doesn't zoom)
						/*
							$sTabName = Dict::S('Tab:InfraGIS');
							$oPage->SetCurrentTab($sTabName); 
							
							// It seems iTop just outputs a script as text if you set it in $oPage->add()? 
							
							$sAddress = $this->Get('crab_address_id_friendlyname');
							$sAddress = trim($sAddress); // "friendlyname" adds invisible spaces at the end, because it *could* show apartment number and sub number.
							$sAddress = urlencode($sAddress);
							
							$oPage->add('<iframe src="https://infragis.infrax.be/infragis/raadplegen/?LAYOUT=Library://Gemeenten/Izegem/Layouts/raadplegen.WebLayout&niscode=36008&LOCALE=nl&mapname=raadplegen&layer=adres&key=adres&value=' . $sAddress .'" height="800px" width="100%"></iframe>');

							 
							$oPage->add_ready_script('

								// After display, set width and height to something

							');
								
						*/
						
					}  ]]></code>
					</method> 
					<method id="PrefillCreationForm" _delta="define">
						<static>false</static>
						<access>public</access>
						<type>Overload-DBObject</type>
						<arguments>
							<argument id="1">
								<type>reference</type>
								<mandatory>true</mandatory>
							</argument>
						</arguments>
						<code><![CDATA[
						
							public function PrefillCreationForm(&$aContextParam) {
							
								parent::PrefillCreationForm($aContextParam);
								
								$sDBTestUUID = '{014E6DBF-5A19-B2FE-D047-8E0B73A19221}';
								$sDBProdUUID = '{4EBD727C-1609-96A0-17F3-DEAE6ED9766D}';

								if(DBProperty::GetProperty('database_uuid', '') == $sDBTestUUID) {
									$this->Set('team_id', 4);
								}
								elseif(DBProperty::GetProperty('database_uuid', '') == $sDBProdUUID) {
									$this->Set('team_id', 157);
								}
							}						
						]]></code>
					</method>

				</methods>
				<presentation>
					<details>
						<items>
							<item id="functionalcis_list">
								<rank>10</rank>
							</item>
							<item id="contacts_list">
								<rank>20</rank>
							</item>
							<item id="related_request_list">
								<rank>30</rank>
							</item>
							<item id="col:col1">
								<rank>40</rank>
								<items>
									<item id="fieldset:Ticket:baseinfo">
										<rank>10</rank>
										<items>
											<item id="org_id">
												<rank>10</rank>
											</item>
											<item id="caller_id">
												<rank>20</rank>
											</item>
											<item id="caller_phone" _delta="define">
												<rank>21</rank>
											</item>
											<item id="status">
												<rank>30</rank>
											</item>
											<item id="origin">
												<rank>40</rank>
											</item>
											<item id="title">
												<rank>50</rank>
											</item>
											<item id="crab_address_id">
												<rank>60</rank>
											</item>

											<item id="description">
												<rank>70</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:Ticket:moreinfo">
										<rank>20</rank>
										<items>
											<item id="servicesubcategory_id">
												<rank>20</rank>
											</item>
											<item id="geom" _delta="define">
												<rank>50</rank>
											</item>
										</items>
									</item>
								</items>
							</item>
							<item id="col:col2">
								<rank>50</rank>
								<items>
									<item id="fieldset:Ticket:contact">
										<rank>20</rank>
										<items>
											<item id="team_id">
												<rank>10</rank>
											</item>
											<item id="agent_id">
												<rank>20</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:Ticket:date">
										<rank>30</rank>
										<items>
											<item id="start_date">
												<rank>10</rank>
											</item>
											<item id="last_update">
												<rank>20</rank>
											</item>
											<item id="assignment_date">
												<rank>30</rank>
											</item>
											<item id="resolution_date">
												<rank>40</rank>
											</item>
											<item id="close_date">
												<rank>50</rank>
											</item>
											<item id="building_date">
												<rank>51</rank>
											</item>
											<item id="reminder">
												<rank>52</rank>
											</item>
										</items>
									</item>
								</items>
							</item>
							<item id="col:col3">
								<rank>60</rank>
								<items>
									<item id="fieldset:Ticket:relation">
										<rank>10</rank>
										<items>
											<item id="parent_request_id">
												<rank>10</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:BuildingRequest:actions_to_follow">
										<rank>11</rank>
										<items>
											<item id="site_visit">
												<rank>10</rank>
											</item>
											<item id="site_visit_w_cops">
												<rank>20</rank>
											</item>
											<item id="remind_citizen">
												<rank>30</rank>
											</item>
											<item id="warrant">
												<rank>40</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:Ticket:resolution">
										<rank>20</rank>
										<items>
											<item id="solution">
												<rank>20</rank>
											</item>
											<item id="time_spent">
												<rank>30</rank>
											</item>
										</items>
									</item>
								</items>
							</item>
						</items>
					</details>
					<search>
						<items>
							<item id="ref">
								<rank>10</rank>
							</item>
							<item id="org_id">
								<rank>20</rank>
							</item>
							<item id="title">
								<rank>30</rank>
							</item>
							<item id="description">
								<rank>40</rank>
							</item>
							<item id="start_date">
								<rank>49</rank>
							</item>
							<item id="building_date">
								<rank>50</rank>
							</item>
							<item id="reminder">
								<rank>51</rank>
							</item>
							<item id="site_visit">
								<rank>52</rank>
							</item>
							<item id="site_visit_w_cops">
								<rank>53</rank>
							</item>
							<item id="remind_citizen">
								<rank>54</rank>
							</item>
							<item id="warrant">
								<rank>55</rank>
							</item>
							<item id="resolution_date">
								<rank>70</rank>
							</item>
							<item id="close_date">
								<rank>80</rank>
							</item>
							<item id="status">
								<rank>90</rank>
							</item>
							<item id="operational_status">
								<rank>95</rank>
							</item>
							<item id="caller_id">
								<rank>100</rank>
							</item>
							<item id="crab_address_id">
								<rank>105</rank>
							</item>

							<item id="origin">
								<rank>110</rank>
							</item>
							<item id="priority">
								<rank>150</rank>
							</item>
							<item id="servicesubcategory_id">
								<rank>170</rank>
							</item>
							<item id="team_id">
								<rank>180</rank>
							</item>
							<item id="agent_id">
								<rank>190</rank>
							</item>
						</items>
					</search>
					<list>
						<items>
							<item id="title">
								<rank>10</rank>
							</item>
							<item id="crab_address_id">
								<rank>15</rank>
							</item>
							<item id="caller_id">
								<rank>30</rank>
							</item>
							<item id="start_date">
								<rank>40</rank>
							</item>
							<item id="status">
								<rank>49</rank>
							</item>
							<item id="building_date">
								<rank>50</rank>
							</item>
							<item id="reminder">
								<rank>51</rank>
							</item>
							<item id="agent_id">
								<rank>60</rank>
							</item>
						</items>
					</list>
				</presentation>
			</class>

			<class id="BuildingViolation" _delta="define">
				<parent>Ticket</parent>
				<properties>
					<comment><![CDATA[/**
 * Persistent classes for a CMDB
 *
 * @copyright   Copyright (C) 2010-2012 Combodo SARL
 * @license     http://opensource.org/licenses/AGPL-3.0
 */]]></comment>
					<category>bizmodel,searchable,requestmgmt</category>
					<abstract>false</abstract>
					<key_type>autoincrement</key_type>
					<db_table>ticket_buildingviolation</db_table>
					<db_key_field>id</db_key_field>
					<db_final_class_field/>
					<naming>
						<attributes>
							<attribute id="ref"/>
						</attributes>
					</naming>
					<display_template/>
					<icon>images/user-request.png</icon>
					<reconciliation>
						<attributes>
							<attribute id="ref"/>
						</attributes>
					</reconciliation>
					<order>
						<columns>
							<column id="ref" ascending="false"/>
						</columns>
					</order>
				</properties>
				<fields>
					<field id="status" xsi:type="AttributeEnum">
						<always_load_in_tables>true</always_load_in_tables>
						<values>
							<value id="new">new</value>
							<value id="waiting_for_approval">waiting_for_approval</value>
							<value id="approved">approved</value>
							<value id="rejected">rejected</value>
							<value id="assigned">assigned</value>
							<value id="pending">pending</value>
							<value id="resolved">resolved</value>
							<value id="closed">closed</value>
						</values>
						<sql>status</sql>
						<default_value>new</default_value>
						<is_null_allowed>false</is_null_allowed>
					</field>
					<field id="request_type" xsi:type="AttributeEnum">
						<values>
							<value id="service_request">service_request</value>
						</values>
						<sql>request_type</sql>
						<default_value>service_request</default_value>
						<is_null_allowed>true</is_null_allowed>
						<display_style>list</display_style>
					</field>
					<field id="impact" xsi:type="AttributeEnum">
						<values>
							<value id="1">1</value>
							<value id="2">2</value>
							<value id="3">3</value>
						</values>
						<sql>impact</sql>
						<default_value>1</default_value>
						<is_null_allowed>false</is_null_allowed>
						<display_style>list</display_style>
					</field>
					<field id="priority" xsi:type="AttributeEnum">
						<values>
							<value id="1">1</value>
							<value id="2">2</value>
							<value id="3">3</value>
							<value id="4">4</value>
						</values>

						<sql>priority</sql>
						<default_value>4</default_value>
						<is_null_allowed>false</is_null_allowed>
					</field>
					<field id="origin" xsi:type="AttributeEnum">
						<values>
							<value id="mail">mail</value>
							<value id="phone">phone</value>
							<value id="portal">portal</value>
							<value id="in_person">in_person</value>
							<value id="by_appointment">by_appointment</value>
							<value id="letter">letter</value>
							<value id="ticket_booth">ticket_booth</value>
						</values>
						<sql>origin</sql>
						<default_value>phone</default_value>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="site_visit_w_cops" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>site_visit_w_cops</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="site_visit_w_vlarem" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>site_visit_w_vlarem</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="warrant" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>warrant</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="recall" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>recall</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="police_report" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>police_report</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="report_findings" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>report_findings</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="voluntary_fix" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>voluntary_fix</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="penalty" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>penalty</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="compulsary_fix" xsi:type="AttributeEnum">
						<values>
							<value id="will_not_do">will_not_do</value>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
						</values>
						<sql>compulsary_fix</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="geom" xsi:type="AttributeGeometry" _delta="define">
						<sql>geom</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
						<format>WKT|Point,LineString,Polygon|EPSG:3857</format>
					</field>
					<field id="crab_address_id" xsi:type="AttributeExternalKey">
						<sql>crab_address_id</sql>
						<on_target_delete>DEL_MANUAL</on_target_delete>
						<target_class>CrabAddress</target_class>
						<is_null_allowed>true</is_null_allowed>
						<!-- No filter on 'in use'. Tickets could be historical, associated with addresses no longer in use -->
					</field> 
					<field id="police_report_number" xsi:type="AttributeString">
						<sql>police_report_number</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="environmental_helpdesk_number" xsi:type="AttributeString">
						<sql>environmental_helpdesk_number</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="cevi_number" xsi:type="AttributeText">
						<sql>cevi_number</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="approver_id" xsi:type="AttributeExternalKey">
						<filter><![CDATA[SELECT Person WHERE org_id= :this->org_id]]></filter>
						<dependencies>
							<attribute id="org_id"/>
						</dependencies>
						<sql>approver_id</sql>
						<target_class>Person</target_class>
						<is_null_allowed>true</is_null_allowed>
						<on_target_delete>DEL_MANUAL</on_target_delete>
						<allow_target_creation>false</allow_target_creation>
					</field>
					<field id="approver_email" xsi:type="AttributeExternalField">
						<extkey_attcode>approver_id</extkey_attcode>
						<target_attcode>email</target_attcode>
					</field>
					<field id="servicesubcategory_id" xsi:type="AttributeExternalKey">
						<filter><![CDATA[SELECT ServiceSubcategory WHERE service_name = 'Overtredingen helpdesk' AND status != 'obsolete']]></filter>
						<dependencies>
							<attribute id="request_type"/>
						</dependencies>
						<sql>servicesubcategory_id</sql>
						<target_class>ServiceSubcategory</target_class>
						<is_null_allowed>true</is_null_allowed>
						<on_target_delete>DEL_MANUAL</on_target_delete>
						<allow_target_creation>false</allow_target_creation>
						<jointype/>
					</field>
					<field id="servicesubcategory_name" xsi:type="AttributeExternalField">
						<extkey_attcode>servicesubcategory_id</extkey_attcode>
						<target_attcode>name</target_attcode>
					</field>
					<field id="assignment_date" xsi:type="AttributeDateTime">
						<sql>assignment_date</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="resolution_date" xsi:type="AttributeDateTime">
						<sql>resolution_date</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="last_pending_date" xsi:type="AttributeDateTime">
						<sql>last_pending_date</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="cumulatedpending" xsi:type="AttributeStopWatch">
						<states>
							<state id="pending"/>
						</states>
						<working_time/>
						<thresholds/>
						<goal/>
					</field>
					<field id="time_spent" xsi:type="AttributeDuration">
						<sql>time_spent</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="solution" xsi:type="AttributeText">
						<sql>solution</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="parent_request_id" xsi:type="AttributeExternalKey">
						<filter><![CDATA[SELECT BuildingViolation WHERE id != :this->id AND status NOT IN ('rejected','resolved','closed')]]></filter>
						<dependencies>
						</dependencies>
						<sql>parent_request_id</sql>
						<target_class>BuildingViolation</target_class>
						<is_null_allowed>true</is_null_allowed>
						<on_target_delete>DEL_MANUAL</on_target_delete>
					</field>
					<field id="parent_request_ref" xsi:type="AttributeExternalField">
						<extkey_attcode>parent_request_id</extkey_attcode>
						<target_attcode>ref</target_attcode>
					</field>
					<field id="parent_incident_id" xsi:type="AttributeExternalKey">
						<filter><![CDATA[SELECT Incident WHERE status != "closed"]]></filter>
						<sql>parent_incident_id</sql>
						<target_class>Incident</target_class>
						<is_null_allowed>true</is_null_allowed>
						<on_target_delete>DEL_MANUAL</on_target_delete>
					</field>
					<field id="parent_incident_ref" xsi:type="AttributeExternalField">
						<extkey_attcode>parent_incident_id</extkey_attcode>
						<target_attcode>ref</target_attcode>
					</field>
					<field id="parent_problem_id" xsi:type="AttributeExternalKey">
						<sql>parent_problem_id</sql>
						<target_class>Problem</target_class>
						<is_null_allowed>true</is_null_allowed>
						<on_target_delete>DEL_MANUAL</on_target_delete>
					</field>
					<field id="parent_problem_ref" xsi:type="AttributeExternalField">
						<extkey_attcode>parent_problem_id</extkey_attcode>
						<target_attcode>ref</target_attcode>
					</field>
					<field id="parent_change_id" xsi:type="AttributeExternalKey">
						<filter><![CDATA[SELECT Change WHERE status != "closed"]]></filter>
						<sql>parent_change_id</sql>
						<target_class>Change</target_class>
						<is_null_allowed>true</is_null_allowed>
						<on_target_delete>DEL_MANUAL</on_target_delete>
					</field>
					<field id="parent_change_ref" xsi:type="AttributeExternalField">
						<extkey_attcode>parent_change_id</extkey_attcode>
						<target_attcode>ref</target_attcode>
					</field>
					<field id="related_request_list" xsi:type="AttributeLinkedSet">
						<linked_class>BuildingViolation</linked_class>
						<ext_key_to_me>parent_request_id</ext_key_to_me>
						<edit_mode>add_remove</edit_mode>
						<count_min>0</count_min>
						<count_max>0</count_max>
					</field>
					<field id="user_comment" xsi:type="AttributeText">
						<sql>user_commment</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
					</field>
					<field id="reminder" xsi:type="AttributeDate">
						<sql>reminder</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
						<display_style>list</display_style>
					</field>
					<field id="violation_date" xsi:type="AttributeDate">
						<sql>violation_date</sql>
						<default_value/>
						<is_null_allowed>true</is_null_allowed>
						<display_style>list</display_style>
					</field>
					<field id="caller_phone" xsi:type="AttributeExternalField" _delta="define">
						<extkey_attcode>caller_id</extkey_attcode>
						<target_attcode>phone</target_attcode>
						<dependencies>
							<attribute id="phone"/>
						</dependencies>
					</field>
					<field id="work_interrupted" xsi:type="AttributeEnum">
						<values>
							<value id="not_done">not_done</value>
							<value id="done">done</value>
							<value id="to_do">to_do</value>
							<value id="will_not_do">will_not_do</value>
						</values>
						<sql>work_interrupted</sql>
						<is_null_allowed>true</is_null_allowed>
					</field>
				</fields>
				<lifecycle>
					<highlight_scale>
						<item id="warning">
							<rank>1</rank>
							<color>HIGHLIGHT_CLASS_WARNING</color>
							<icon>images/user-request-deadline.png</icon>
						</item>
						<item id="critical">
							<rank>2</rank>
							<color>HIGHLIGHT_CLASS_CRITICAL</color>
							<icon>images/user-request-escalated.png</icon>
						</item>
						<item id="closed">
							<rank>3</rank>
							<color>HIGHLIGHT_CLASS_NONE</color>
							<icon>images/user-request-closed.png</icon>
						</item>
					</highlight_scale>
					<attribute>status</attribute>
					<stimuli>
						<stimulus id="ev_assign" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_reassign" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_approve" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_reject" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_pending" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_timeout" xsi:type="StimulusInternal"/>
						<stimulus id="ev_autoresolve" xsi:type="StimulusInternal"/>
						<stimulus id="ev_autoclose" xsi:type="StimulusInternal"/>
						<stimulus id="ev_resolve" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_close" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_reopen" xsi:type="StimulusUserAction"/>
						<stimulus id="ev_wait_for_approval" xsi:type="StimulusUserAction"/>
					</stimuli>
					<states>
						<state id="new">
							<flags>
								<attribute id="ref">
									<read_only/>
								</attribute>
								<attribute id="org_id">
									<mandatory/>
								</attribute>
								<attribute id="caller_id">
									<mandatory/>
								</attribute>
								<attribute id="agent_id">
									<hidden/>
								</attribute>
								<attribute id="priority">
									<read_only/>
								</attribute>
								<attribute id="start_date">
									<read_only/>
								</attribute>
								<attribute id="last_update">
									<read_only/>
								</attribute>
								<attribute id="close_date">
									<hidden/>
								</attribute>
								<attribute id="approver_id">
									<hidden/>
								</attribute>
								<attribute id="assignment_date">
									<hidden/>
								</attribute>
								<attribute id="resolution_date">
									<hidden/>
								</attribute>
								<attribute id="last_pending_date">
									<hidden/>
								</attribute>
								<attribute id="time_spent">
									<hidden/>
								</attribute>
								<attribute id="solution">
									<hidden/>
								</attribute>
								<attribute id="user_comment">
									<hidden/>
								</attribute>
							</flags>
							<transitions>
								<transition id="ev_assign">
									<target>assigned</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">assignment_date</param>
											</params>
										</action>
									</actions>
								</transition>
								<transition id="ev_wait_for_approval">
									<target>waiting_for_approval</target>
									<actions/>
								</transition>
								<transition id="ev_autoresolve">
									<target>resolved</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">resolution_date</param>
											</params>
										</action>
										<action>
											<verb>SetElapsedTime</verb>
											<params>
												<param xsi:type="attcode">time_spent</param>
												<param xsi:type="attcode">start_date</param>
												<param xsi:type="string">DefaultWorkingTimeComputer</param>
											</params>
										</action>
										<action>
											<verb>ResolveChildTickets</verb>
											<params/>
										</action>
									</actions>
								</transition>
							</transitions>
						</state>
						<state id="assigned">
							<inherit_flags_from>new</inherit_flags_from>
							<flags>
								<attribute id="team_id">
									<read_only/>
								</attribute>
								<attribute id="agent_id">
									<mandatory/>
									<must_prompt/>
									<read_only/>
								</attribute>
								<attribute id="approver_id">
									<read_only/>
								</attribute>
								<attribute id="assignment_date">
									<read_only/>
								</attribute>
								<attribute id="caller_id"/>
							</flags>
							<transitions>
								<transition id="ev_resolve">
									<target>resolved</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">resolution_date</param>
											</params>
										</action>
										<action>
											<verb>SetElapsedTime</verb>
											<params>
												<param xsi:type="attcode">time_spent</param>
												<param xsi:type="attcode">start_date</param>
												<param xsi:type="string">DefaultWorkingTimeComputer</param>
											</params>
										</action>
										<action>
											<verb>ResolveChildTickets</verb>
											<params/>
										</action>
									</actions>
								</transition>
								<transition id="ev_reassign">
									<target>assigned</target>
									<flags>
										<attribute id="agent_id">
											<must_change/>
										</attribute>
									</flags>
									<actions/>
								</transition>
								<transition id="ev_timeout">
									<target>escalated_ttr</target>
									<actions/>
								</transition>
								<transition id="ev_autoresolve">
									<target>resolved</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">resolution_date</param>
											</params>
										</action>
										<action>
											<verb>SetElapsedTime</verb>
											<params>
												<param xsi:type="attcode">time_spent</param>
												<param xsi:type="attcode">start_date</param>
												<param xsi:type="string">DefaultWorkingTimeComputer</param>
											</params>
										</action>
										<action>
											<verb>ResolveChildTickets</verb>
											<params/>
										</action>
									</actions>
								</transition>
							</transitions>
						</state>
						<state id="waiting_for_approval">
							<inherit_flags_from>new</inherit_flags_from>
							<flags>
								<attribute id="approver_id">
									<must_prompt/>
								</attribute>
							</flags>
							<transitions>
								<transition id="ev_approve">
									<target>approved</target>
									<actions/>
								</transition>
								<transition id="ev_reject">
									<target>rejected</target>
									<actions/>
								</transition>
							</transitions>
						</state>
						<state id="approved">
							<inherit_flags_from>waiting_for_approval</inherit_flags_from>
							<flags>
								<attribute id="approver_id">
									<read_only/>
								</attribute>
							</flags>
							<transitions>
								<transition id="ev_assign">
									<target>assigned</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">assignment_date</param>
											</params>
										</action>
									</actions>
								</transition>
								<transition id="ev_autoresolve">
									<target>resolved</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">resolution_date</param>
											</params>
										</action>
										<action>
											<verb>SetElapsedTime</verb>
											<params>
												<param xsi:type="attcode">time_spent</param>
												<param xsi:type="attcode">start_date</param>
												<param xsi:type="string">DefaultWorkingTimeComputer</param>
											</params>
										</action>
										<action>
											<verb>ResolveChildTickets</verb>
											<params/>
										</action>
									</actions>
								</transition>
							</transitions>
						</state>
						<state id="rejected">
							<inherit_flags_from>new</inherit_flags_from>
							<flags>
								<attribute id="team_id"/>
							</flags>
							<transitions>
								<transition id="ev_reopen">
									<target>new</target>
									<actions/>
								</transition>
							</transitions>
						</state>
						<state id="pending">
							<inherit_flags_from>assigned</inherit_flags_from>
							<flags>
								<attribute id="last_pending_date">
									<read_only/>
								</attribute>
							</flags>
							<transitions>
								<transition id="ev_assign">
									<target>assigned</target>
									<actions>
									</actions>
								</transition>
								<transition id="ev_autoresolve">
									<target>resolved</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">resolution_date</param>
											</params>
										</action>
										<action>
											<verb>SetElapsedTime</verb>
											<params>
												<param xsi:type="attcode">time_spent</param>
												<param xsi:type="attcode">start_date</param>
												<param xsi:type="string">DefaultWorkingTimeComputer</param>
											</params>
										</action>
										<action>
											<verb>ResolveChildTickets</verb>
											<params/>
										</action>
									</actions>
								</transition>
							</transitions>
						</state>
						<state id="resolved">
							<highlight>
								<code>closed</code>
							</highlight>
							<inherit_flags_from>assigned</inherit_flags_from>
							<flags>
								<attribute id="caller_id">
									<read_only/>
								</attribute>
								<attribute id="crab_address_id">
								</attribute>

								<attribute id="origin">
									<read_only/>
								</attribute>
								<attribute id="servicesubcategory_id">
									<must_prompt/>
								</attribute>
								<attribute id="parent_request_id">
									<read_only/>
								</attribute>
								<attribute id="parent_change_id">
									<read_only/>
								</attribute>
								<attribute id="parent_problem_id">
									<read_only/>
								</attribute>
								<attribute id="reminder">
									<read_only/>
								</attribute>
								<attribute id="description">
									<read_only/>
								</attribute>
								<attribute id="org_id">
									<read_only/>
								</attribute>
								<attribute id="team_id">
									<read_only/>
								</attribute>
								<attribute id="agent_id">
									<read_only/>
								</attribute>
								<attribute id="resolution_date">
									<read_only/>
								</attribute>
								<attribute id="violation_date">
									<read_only/>
								</attribute>
								<attribute id="site_visit_w_cops">
									<read_only/>
								</attribute>
								<attribute id="site_visit_w_vlarem">
									<read_only/>
								</attribute>
								<attribute id="warrant">
									<read_only/>
								</attribute>
								<attribute id="recall">
									<read_only/>
								</attribute>
								<attribute id="police_report">
									<read_only/>
								</attribute>
								<attribute id="report_findings">
									<read_only/>
								</attribute>
								<attribute id="voluntary_fix">
									<read_only/>
								</attribute>
								<attribute id="penalty">
									<read_only/>
								</attribute>
								<attribute id="compulsary_fix">
									<read_only/>
								</attribute>
								<attribute id="work_interrupted">
									<read_only/>
								</attribute>
								<attribute id="time_spent">
									<read_only/>
								</attribute>
								<attribute id="solution">
									<mandatory/>
									<must_prompt/>
								</attribute>
							</flags>
							<transitions>
								<transition id="ev_close">
									<target>closed</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">close_date</param>
											</params>
										</action>
									</actions>
								</transition>
								<transition id="ev_reopen">
									<target>assigned</target>
									<actions>
									</actions>
								</transition>
								<transition id="ev_autoresolve">
									<target>resolved</target>
									<actions>
										<action>
											<verb>SetCurrentDate</verb>
											<params>
												<param xsi:type="attcode">resolution_date</param>
											</params>
										</action>
										<action>
											<verb>SetElapsedTime</verb>
											<params>
												<param xsi:type="attcode">time_spent</param>
												<param xsi:type="attcode">start_date</param>
												<param xsi:type="string">DefaultWorkingTimeComputer</param>
											</params>
										</action>
										<action>
											<verb>ResolveChildTickets</verb>
											<params/>
										</action>
									</actions>
								</transition>
							</transitions>
						</state>
						<state id="closed">
							<highlight>
								<code>closed</code>
							</highlight>
							<inherit_flags_from>resolved</inherit_flags_from>
							<flags>
								<attribute id="private_log">
									<read_only/>
								</attribute>
								<attribute id="functionalcis_list">
									<read_only/>
								</attribute>
								<attribute id="contacts_list">
									<read_only/>
								</attribute>
								<attribute id="servicesubcategory_id">
									<read_only/>
								</attribute>
								<attribute id="close_date">
									<read_only/>
								</attribute>
								<attribute id="reminder">
									<read_only/>
								</attribute>
								<attribute id="solution">
									<read_only/>
								</attribute>
								<attribute id="violation_date">
									<read_only/>
								</attribute>
								<attribute id="site_visit_w_cops">
									<read_only/>
								</attribute>
								<attribute id="site_visit_w_vlarem">
									<read_only/>
								</attribute>
								<attribute id="warrant">
									<read_only/>
								</attribute>
								<attribute id="recall">
									<read_only/>
								</attribute>
								<attribute id="police_report">
									<read_only/>
								</attribute>
								<attribute id="report_findings">
									<read_only/>
								</attribute>
								<attribute id="voluntary_fix">
									<read_only/>
								</attribute>
								<attribute id="penalty">
									<read_only/>
								</attribute>
								<attribute id="compulsary_fix">
									<read_only/>
								</attribute>
								<attribute id="work_interrupted">
									<read_only/>
								</attribute>
								<attribute id="user_comment">
									<read_only/>
									<must_prompt/>
								</attribute>
							</flags>
								<transitions>
									<transition id="ev_reopen">
										<target>assigned</target>
										<actions>
										</actions>
									</transition>
								</transitions>	
						</state>
					</states>
				</lifecycle>
				<methods>
					<method id="SetAssignedDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetAssignedDate($sStimulusCode)
	{
		$this->Set('assignment_date', time());
		return true;
	}]]></code>
					</method>
					<method id="SetLastPendingDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetLastPendingDate($sStimulusCode)
	{
		$this->Set('last_pending_date', time());
		return true;
	}]]></code>
					</method>
					<method id="SetResolveDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() and SetElapsedTime() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetResolveDate($sStimulusCode)
	{
		$this->Set('resolution_date', time());
                $iTimeSpent = time() - AttributeDateTime::GetAsUnixSeconds($this->Get('start_date'));
		$this->Set('time_spent', $iTimeSpent);
		return true;
	}]]></code>
					</method>
					<method id="SetClosureDate">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentDate() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetClosureDate($sStimulusCode)
	{
		$this->Set('close_date', time());
		return true;
	}]]></code>
					</method>
					<method id="SetApprover">
						<comment><![CDATA[/**
	 * To be deprecated: use SetCurrentUser() instead
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function SetApprover($sStimulusCode)
	{
		$this->Set('approver_id', UserRights::GetUserId());
		return true;
	}]]></code>
					</method>
					<method id="DoCheckToWrite">
						<static>false</static>
						<access>public</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[public function DoCheckToWrite()
  {
    parent::DoCheckToWrite();
    if (!$this->IsNew() && ($this->Get('parent_request_id') == $this->GetKey()))
    {
      $this->m_aCheckIssues[] = Dict::Format('Class:BuildingViolation/Error:CannotAssignParentRequestIdToSelf');
    }
  }]]></code>
					</method>
					<method id="ComputeValues">
						<static>false</static>
						<access>public</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[	public function ComputeValues()
	{

		
		return parent::ComputeValues();
	}]]></code>
					</method>
					<method id="DisplayBareRelations">
						<static>false</static>
						<access>public</access>
						<type>Overload-cmdbAbstractObject</type>
						<code><![CDATA[	function DisplayBareRelations(WebPage $oPage, $bEditMode = false)
	{
		parent::DisplayBareRelations($oPage, $bEditMode);

		
	}]]></code>
					</method>
					<method id="resolveChilds">
						<comment><![CDATA[/**
	 * To be deprecated: use ResolveChildTickets() instead
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function resolveChilds($sStimulusCode)
	{
				
		$sOQL = "SELECT BuildingViolation WHERE parent_request_id=:ticket";
		$oChildRequestSet = new DBObjectSet(DBObjectSearch::FromOQL($sOQL),
						array(),
						array(
							'ticket' => $this->GetKey(),
							)
						);
		while($oRequest = $oChildRequestSet->Fetch())
		{
			if ( $oRequest->Get('status') != 'resolved')
			{
				$oRequest->set('servicesubcategory_id',$this->Get('servicesubcategory_id'));	
				$oRequest->set('team_id',$this->Get('team_id'));
				$oRequest->set('agent_id',$this->Get('agent_id'));	
				$oRequest->set('solution','Automatically resolved by request:[[BuildingViolation:'.$this->Get('ref').']]');
				$oRequest->ApplyStimulus('ev_autoresolve');
				$oRequest->DBUpdate();
			}
		}
		return true;

	}]]></code>
					</method>
					<method id="ResolveChildTickets">
						<comment><![CDATA[/**
	 * Cascade the resolution to child User Request
	 * @return true (returning false would stop the ongoing transition)
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<arguments>
						</arguments>
						<code><![CDATA[	public function ResolveChildTickets()
	{
        static $aTickets = array(); // prevent infinite recursion
    
		// Automatically resolve child requests
		$sOQL = "SELECT BuildingViolation WHERE parent_request_id = :ticket AND status != 'resolved'";
		$oChildRequestSet = new DBObjectSet(DBObjectSearch::FromOQL($sOQL), array(), array('ticket' => $this->GetKey()));
		while($oRequest = $oChildRequestSet->Fetch())
		{
            if (!array_key_exists($oRequest->GetKey(), $aTickets))
            {
                $aTickets[$oRequest->GetKey()] = true;
			    $oRequest->ResolveFrom($this);
            }
		}
		return true;
	}]]></code>
					</method>
					<method id="ResolveFrom">
						<comment><![CDATA[/**
	 * Resolve the ticket from another resolved ticket
	 * @return void
	 */]]></comment>
						<static>false</static>
						<access>public</access>
						<type>Internal</type>
						<code><![CDATA[	public function ResolveFrom($oParentTicket)
	{
		if ($this->Get('status') != 'resolved')
		{
			$this->Set('servicesubcategory_id', $oParentTicket->Get('servicesubcategory_id'));	
			$this->Set('team_id', $oParentTicket->Get('team_id'));
			$this->Set('agent_id', $oParentTicket->Get('agent_id'));
			$sParent = '[['.get_class($oParentTicket).':'.$oParentTicket->Get('ref').']]';
			$this->Set('solution', Dict::Format('Tickets:ResolvedFrom', $sParent, MetaModel::GetName(get_class($oParentTicket))));
			$this->ApplyStimulus('ev_autoresolve');
			$this->DBUpdate();
		}
	}]]></code>
					</method>
					<method id="UpdateChildRequestLog">
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[	public function UpdateChildRequestLog()
	{
		$oLog = $this->Get('private_log');
		$sLogPrivate = $oLog->GetModifiedEntry('html');
		if ($sLogPrivate != '')
		{
			$sOQL = "SELECT BuildingViolation WHERE parent_request_id=:ticket";
			$oChildRequestSet = new DBObjectSet(DBObjectSearch::FromOQL($sOQL),
							array(),
							array(
								'ticket' => $this->GetKey(),
								)
							);
			while($oRequest = $oChildRequestSet->Fetch())
			{
				$oRequest->set('private_log',$sLogPrivate);
				$oRequest->DBUpdate();
			}
		}
		return true;

	}]]></code>
					</method>
					<method id="ComputeImpactedItems">
						<static>false</static>
						<access>public</access>
						<type>LifecycleAction</type>
						<code><![CDATA[
    public function ComputeImpactedItems()
	{
        // This method is kept for backward compatibility
        // in case a delta redefines it, but you may call
        // UpdateImpactedItems directly
		$this->UpdateImpactedItems();
	}]]></code>
					</method>
					<method id="OnInsert">
						<static>false</static>
						<access>protected</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[
    protected function OnInsert()
	{
		$this->ComputeImpactedItems();
		$this->Set('last_update', time());
		$this->Set('start_date', time());
				
		
		// Dealing with a new TechnicalRequest, so new crab_address_id
		// If no geometry was drawn AND a crab_address_id was selected: overwrite geometry
		$bCopyGeometryFromCrabAddress = ($this->Get('geom') == '' && (Int)$this->Get('crab_address_id') > 0);
		
		if($bCopyGeometryFromCrabAddress == true) {
			
			$sQuery = 'SELECT CrabAddress WHERE id = '.$this->Get('crab_address_id');
			$oSet_CrabAddresses = new CMDBObjectSet(DBObjectSearch::FromOQL($sQuery));
			
			while($oAddress = $oSet_CrabAddresses->Fetch()) {
				$this->Set('geom', $oAddress->Get('geom'));
			}
			
		}
	}]]></code>
					</method>
					<method id="OnUpdate">
						<static>false</static>
						<access>protected</access>
						<type>Overload-DBObject</type>
						<code><![CDATA[
    protected function OnUpdate()
	{
        parent::OnUpdate();
        $aChanges = $this->ListChanges();
        if (array_key_exists('functionalcis_list', $aChanges))
        {
            $this->UpdateImpactedItems();
        }
		$this->Set('last_update', time());
		$this->UpdateChildRequestLog();
		
		
		// geometry is now 'empty' (was already empty or has now been reset)
		// crab_address_id is set AND has changed?
		$bCopyGeometryFromCrabAddress = ($this->Get('geom') == '' && array_key_exists('crab_address_id', $aChanges) == true && (Int)$this->Get('crab_address_id') > 0);
		
		if($bCopyGeometryFromCrabAddress == true) {
			
			$sQuery = 'SELECT CrabAddress WHERE id = '.$this->Get('crab_address_id');
			$oSet_CrabAddresses = new CMDBObjectSet(DBObjectSearch::FromOQL($sQuery));
			
			while($oAddress = $oSet_CrabAddresses->Fetch()) {
				$this->Set('geom', $oAddress->Get('geom'));
			}
			
		}
					
	}]]></code>
					</method>
					<method id="PrefillCreationForm" _delta="define">
						<static>false</static>
						<access>public</access>
						<type>Overload-DBObject</type>
						<arguments>
							<argument id="1">
								<type>reference</type>
								<mandatory>true</mandatory>
							</argument>
						</arguments>
						<code><![CDATA[
						
							public function PrefillCreationForm(&$aContextParam) {
							
								parent::PrefillCreationForm($aContextParam);
								
								$sDBTestUUID = '{014E6DBF-5A19-B2FE-D047-8E0B73A19221}';
								$sDBProdUUID = '{4EBD727C-1609-96A0-17F3-DEAE6ED9766D}';

								if(DBProperty::GetProperty('database_uuid', '') == $sDBTestUUID) {
									$this->Set('team_id', 4);
								}
								elseif(DBProperty::GetProperty('database_uuid', '') == $sDBProdUUID) {
									$this->Set('team_id', 157);
								}
							}						
						]]></code>
					</method>
				</methods>
				<presentation>
					<details>
						<items>
							<item id="functionalcis_list">
								<rank>10</rank>
							</item>
							<item id="contacts_list">
								<rank>20</rank>
							</item>
							<item id="related_request_list">
								<rank>30</rank>
							</item>
							<item id="col:col1">
								<rank>40</rank>
								<items>
									<item id="fieldset:Ticket:baseinfo">
										<rank>10</rank>
										<items>
											<item id="org_id">
												<rank>10</rank>
											</item>
											<item id="caller_id">
												<rank>20</rank>
											</item>
											<item id="caller_phone" _delta="define">
												<rank>21</rank>
											</item>
											<item id="status">
												<rank>30</rank>
											</item>
											<item id="origin">
												<rank>40</rank>
											</item>
											<item id="title">
												<rank>50</rank>
											</item>
											<item id="crab_address_id">
												<rank>60</rank>
											</item>

											<item id="description">
												<rank>70</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:Ticket:moreinfo">
										<rank>20</rank>
										<items>
											<item id="servicesubcategory_id">
												<rank>20</rank>
											</item>
											<item id="police_report_number">
												<rank>21</rank>
											</item>
											<item id="environmental_helpdesk_number">
												<rank>22</rank>
											</item> 
											<item id="cevi_number">
												<rank>23</rank>
											</item> 
											<item id="geom" _delta="define">
												<rank>50</rank>
											</item>
										</items>
									</item>
								</items>
							</item>
							<item id="col:col2">
								<rank>50</rank>
								<items>
									<item id="fieldset:Ticket:contact">
										<rank>20</rank>
										<items>
											<item id="team_id">
												<rank>10</rank>
											</item>
											<item id="agent_id">
												<rank>20</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:Ticket:date">
										<rank>30</rank>
										<items>
											<item id="start_date">
												<rank>10</rank>
											</item>
											<item id="last_update">
												<rank>20</rank>
											</item>
											<item id="assignment_date">
												<rank>30</rank>
											</item>
											<item id="resolution_date">
												<rank>40</rank>
											</item>
											<item id="close_date">
												<rank>50</rank>
											</item>
											<item id="violation_date">
												<rank>51</rank>
											</item>
											<item id="reminder">
												<rank>52</rank>
											</item>
										</items>
									</item>
								</items>
							</item>
							<item id="col:col3">
								<rank>60</rank>
								<items>
									<item id="fieldset:Ticket:relation">
										<rank>10</rank>
										<items>
											<item id="parent_request_id">
												<rank>10</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:BuildingRequest:actions_to_follow">
										<rank>11</rank>
										<items>
											<item id="site_visit_w_vlarem">
												<rank>10</rank>
											</item>
											<item id="site_visit_w_cops">
												<rank>20</rank>
											</item>
											<item id="warrant">
												<rank>30</rank>
											</item>										
											<item id="recall">
												<rank>40</rank>
											</item>
											<item id="report_findings">
												<rank>50</rank>
											</item>
											<item id="police_report">
												<rank>60</rank>
											</item>
											<item id="work_interrupted">
												<rank>70</rank>
											</item>
											<item id="voluntary_fix">
												<rank>80</rank>
											</item>
											<item id="penalty">
												<rank>90</rank>
											</item>
											<item id="compulsary_fix">
												<rank>100</rank>
											</item>
										</items>
									</item>
									<item id="fieldset:Ticket:resolution">
										<rank>20</rank>
										<items>
											<item id="solution">
												<rank>20</rank>
											</item>
											<item id="time_spent">
												<rank>30</rank>
											</item>
										</items>
									</item>
								</items>
							</item>
						</items>
					</details>
					<search>
						<items>
							<item id="ref">
								<rank>10</rank>
							</item>
							<item id="org_id">
								<rank>20</rank>
							</item>
							<item id="title">
								<rank>30</rank>
							</item>
							<item id="description">
								<rank>40</rank>
							</item>
							<item id="start_date">
								<rank>50</rank>
							</item>
							<item id="reminder">
								<rank>51</rank>
							</item>
							<item id="site_visit_w_cops">
								<rank>52</rank>
							</item>
							<item id="site_visit_w_vlarem">
								<rank>53</rank>
							</item>
							<item id="warrant">
								<rank>54</rank>
							</item>
							<item id="recall">
								<rank>55</rank>
							</item>
							<item id="police_report">
								<rank>56</rank>
							</item>
							<item id="report_findings">
								<rank>57</rank>
							</item>
							<item id="voluntary_fix">
								<rank>58</rank>
							</item>
							<item id="penalty">
								<rank>59</rank>
							</item>
							<item id="compulsary_fix">
								<rank>60</rank>
							</item>
							<item id="work_interrupted">
								<rank>65</rank>
							</item>
							<item id="resolution_date">
								<rank>70</rank>
							</item>
							<item id="close_date">
								<rank>80</rank>
							</item>
							<item id="violation_date">
								<rank>81</rank>
							</item>
							<item id="status">
								<rank>90</rank>
							</item>
							<item id="operational_status">
								<rank>95</rank>
							</item>
							<item id="caller_id">
								<rank>100</rank>
							</item>
							<item id="crab_address_id">
								<rank>105</rank>
							</item>						 
							<item id="origin">
								<rank>110</rank>
							</item>
							<item id="priority">
								<rank>150</rank>
							</item>
							<item id="servicesubcategory_id">
								<rank>170</rank>
							</item>
							<item id="team_id">
								<rank>180</rank>
							</item>
							<item id="agent_id">
								<rank>190</rank>
							</item>
						</items>
					</search>
					<list>
						<items>
							<item id="title">
								<rank>10</rank>
							</item>
							<item id="crab_address_id">
								<rank>15</rank>
							</item>
							<item id="caller_id">
								<rank>30</rank>
							</item>
							<item id="start_date">
								<rank>40</rank>
							</item>
							<item id="status">
								<rank>50</rank>
							</item>
							<item id="reminder">
								<rank>51</rank>
							</item>
							<item id="violation_date">
								<rank>52</rank>
							</item>
							<item id="agent_id">
								<rank>60</rank>
							</item>
						</items>
					</list>
				</presentation>
			</class>
		</classes>
		<menus>
			<menu id="BuildingRequestManagement" xsi:type="MenuGroup" _delta="define">
				<rank>33</rank>
				<enable_stimulus/>
			</menu>
			<menu id="BuildingRequest:Overview" xsi:type="DashboardMenuNode" _delta="define">
				<rank>0</rank>
				<parent>BuildingRequestManagement</parent>
				<definition>
					<layout>DashboardLayoutTwoCols</layout>
					<title>Overzicht Omgeving</title>
					<cells>
						<cell id="0">
						  <rank>0</rank>
						  <dashlets>
							<dashlet id="8" xsi:type="DashletHeaderStatic">
							  <rank>0</rank>
							  <title>Omgeving</title>
							  <icon>itop-config-mgmt/images/business-process.png</icon>
							</dashlet>
							<dashlet id="7" xsi:type="DashletObjectList">
							  <rank>1</rank>
							  <title>Wat moet opgevolgd worden?</title>
							  <query>SELECT BuildingRequest WHERE reminder &lt; DATE_ADD(NOW(), INTERVAL 7 DAY) AND status NOT IN ('resolved', 'closed')</query>
							  <menu>false</menu>
							</dashlet>
							<dashlet id="3" xsi:type="DashletGroupByTable">
							  <rank>2</rank>
							  <title>Tickets per status</title>
							  <query>SELECT BuildingRequest WHERE status NOT IN ('rejected')</query>
							  <group_by>status</group_by>
							  <style>table</style>
							</dashlet>
							<dashlet id="4" xsi:type="DashletGroupByTable">
							  <rank>3</rank>
							  <title>UI-RequestManagementOverview-OpenRequestByAgent</title>
							  <query>SELECT BuildingRequest WHERE status NOT IN ('closed','rejected','resolved')</query>
							  <group_by>agent_id</group_by>
							  <style>table</style>
							</dashlet>
						  </dashlets>
						</cell>
						<cell id="1">
						  <rank>1</rank>
						  <dashlets>
							<dashlet id="9" xsi:type="DashletHeaderStatic">
							  <rank>0</rank>
							  <title>Overtredingen</title>
							  <icon>itop-incident-mgmt-itil/images/incident-red.png</icon>
							</dashlet>
							<dashlet id="10" xsi:type="DashletObjectList">
							  <rank>1</rank>
							  <title>Wat moet opgevolgd worden?</title>
							  <query>SELECT BuildingViolation WHERE  reminder &lt; DATE_ADD(NOW(), INTERVAL 7 DAY) AND status NOT IN ('resolved', 'closed')</query>
							  <menu>false</menu>
							</dashlet>
							<dashlet id="11" xsi:type="DashletGroupByTable">
							  <rank>2</rank>
							  <title>Tickets per status</title>
							  <query>SELECT BuildingViolation WHERE status NOT IN ('rejected')</query>
							  <group_by>status</group_by>
							  <style>table</style>
							</dashlet>
							<dashlet id="12" xsi:type="DashletGroupByTable">
							  <rank>3</rank>
							  <title>UI-RequestManagementOverview-OpenRequestByAgent</title>
							  <query>SELECT BuildingViolation WHERE status NOT IN ('closed','rejected','resolved')</query>
							  <group_by>agent_id</group_by>
							  <style>table</style>
							</dashlet>
						  </dashlets>
						</cell>
						<cell id="2">
						  <rank>2</rank>
						  <dashlets>
							<dashlet id="2" xsi:type="DashletGroupByBars">
							  <rank>0</rank>
							  <title>UI-RequestManagementOverview-Last-14-days</title>
							  <query>SELECT BuildingRequest WHERE DATE_SUB(NOW(), INTERVAL 14 DAY) &lt; start_date</query>
							  <group_by>start_date:day_of_month</group_by>
							  <style>bars</style>
							</dashlet>
						  </dashlets>
						</cell>
						<cell id="3">
						  <rank>3</rank>
						  <dashlets>
							<dashlet id="0" xsi:type="DashletEmptyCell">
							  <rank>0</rank>
							</dashlet>
						  </dashlets>
						</cell>
						<cell id="4">
						  <rank>4</rank>
						  <dashlets>
							<dashlet id="0" xsi:type="DashletEmptyCell">
							  <rank>0</rank>
							</dashlet>
						  </dashlets>
						</cell>
						<cell id="5">
						  <rank>5</rank>
						  <dashlets>
							<dashlet id="0" xsi:type="DashletEmptyCell">
							  <rank>0</rank>
							</dashlet>
						  </dashlets>
						</cell>
					</cells>
				</definition>
			</menu>
			<menu id="NewBuildingRequest" xsi:type="NewObjectMenuNode" _delta="define">
				<rank>1</rank>
				<parent>BuildingRequestManagement</parent>
				<class>BuildingRequest</class>
			</menu>
			<menu id="SearchBuildingRequests" xsi:type="SearchMenuNode" _delta="define">
				<rank>2</rank>
				<parent>BuildingRequestManagement</parent>
				<class>BuildingRequest</class>
			</menu>
			<menu id="BuildingRequest:MyRequests" xsi:type="OQLMenuNode" _delta="define">
				<rank>3</rank>
				<parent>BuildingRequestManagement</parent>
				<oql><![CDATA[SELECT BuildingRequest WHERE agent_id = :current_contact_id AND status NOT IN ("closed","resolved")]]></oql>
				<do_search/>
				<auto_reload>fast</auto_reload>
			</menu>
			<menu id="BuildingRequest:OpenRequests" xsi:type="OQLMenuNode" _delta="define">
				<rank>4</rank>
				<parent>BuildingRequestManagement</parent>
				<oql><![CDATA[SELECT BuildingRequest WHERE status NOT IN ("closed","resolved")]]></oql>
				<do_search>1</do_search>
				<auto_reload>fast</auto_reload>
			</menu>
			<menu id="BuildingRequest:Violation" xsi:type="TemplateMenuNode" _delta="define">
				<rank>5</rank>	
				<parent>BuildingRequestManagement</parent>
				<template_file/>
			</menu>
			<menu id="NewBuildingViolation" xsi:type="NewObjectMenuNode" _delta="define">
				<rank>6</rank>
				<parent>BuildingRequest:Violation</parent>
				<class>BuildingViolation</class>
			</menu>
			<menu id="SearchBuildingViolations" xsi:type="SearchMenuNode" _delta="define">
				<rank>7</rank>
				<parent>BuildingRequest:Violation</parent>
				<class>BuildingViolation</class>
			</menu>
			<menu id="BuildingViolation:MyRequests" xsi:type="OQLMenuNode" _delta="define">
				<rank>8</rank>
				<parent>BuildingRequest:Violation</parent>
				<oql><![CDATA[SELECT BuildingViolation WHERE agent_id = :current_contact_id AND status NOT IN ("closed","resolved")]]></oql>
				<do_search/>
				<auto_reload>fast</auto_reload>
			</menu>
			<menu id="BuildingViolation:OpenRequests" xsi:type="OQLMenuNode" _delta="define">
				<rank>9</rank>
				<parent>BuildingRequest:Violation</parent>
				<oql><![CDATA[SELECT BuildingViolation WHERE status NOT IN ("closed","resolved")]]></oql>
				<do_search>1</do_search>
				<auto_reload>fast</auto_reload>
			</menu>
		</menus>
		<module_designs>
			<module_design id="itop-portal">
				<classes>
					<class id="ServiceSubcategory">
						<scopes>
							<scope id="all">
								<oql_view _delta="redefine"><![CDATA[SELECT ServiceSubcategory WHERE status != 'obsolete' AND request_type = 'service_request']]></oql_view>
							</scope>
						</scopes>
					</class>
				</classes>
			</module_design>
		</module_designs>
		<user_rights>
    <groups>
		
		<group id="BuildingRequest" _delta="define">
			<classes>
			  <class id="BuildingRequest"/>
			  <class id="BuildingViolation"/>
			  <class id="DocumentFileBuilding"/>
			  <class id="ContactMethod"/>
			  <class id="AuthenticationMethod"/>
			</classes>
		</group>
	
		<group id="BuildingViolation" _delta="define">
			<classes>
			  <class id="BuildingViolation"/>
			  <class id="ContactMethod"/>
		      <class id="AuthenticationMethod"/>
			</classes>
		</group>  
		  
		<group id="KnownErrors" _delta="define_if_not_exists">
				<classes>
				  <class id="FAQ"/>
				  <class id="FAQCategory"/>
				</classes>
		</group>
			
		<group id="PrecannedReplies" _delta="define_if_not_exists">
				<classes>
				  <class id="PrecannedReply"/>
				  <class id="PrecannedReplyCategory"/>
				</classes>
		</group>
		
		<group id="Crab" _delta="define_if_not_exists">
			<classes>
			  <class id="CrabStreet"/>
			  <class id="CrabAddress"/>
			</classes>
		</group>
	 
    </groups>
    <profiles>
	  <profile id="102" _delta="define">
        <name>Building User</name>
        <description>Person in charge of Building, can write documentation, building requests,...</description>
        <groups>
          <group id="General">
            <actions>
			  <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
			  <action id="action:write">allow</action>
              <action id="action:bulk write">allow</action>
			  <action id="action:delete">allow</action>
              <action id="action:bulk delete">allow</action>
            </actions>
          </group>
 		   <group id="Service">
            <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
            </actions>
          </group> 
		  <group id="BuildingRequest">
		    <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
			  <action id="action:write">allow</action>
              <action id="action:bulk write">allow</action>
			  <action id="action:delete">allow</action>
              <action id="action:bulk delete">allow</action>
			  <action id="stimulus:ev_assign">allow</action>
			  <action id="stimulus:ev_resolve">allow</action>
			  <action id="stimulus:ev_reassign">allow</action>
			  <action id="stimulus:ev_reopen">allow</action>
            </actions>
		  </group>	
		  <group id="BuildingViolation">
		    <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
			  <action id="action:write">allow</action>
              <action id="action:bulk write">allow</action>
			  <action id="action:delete">allow</action>
              <action id="action:bulk delete">allow</action>
			  <action id="stimulus:ev_assign">allow</action>
			  <action id="stimulus:ev_resolve">allow</action>
			  <action id="stimulus:ev_reassign">allow</action>
			  <action id="stimulus:ev_reopen">allow</action>
            </actions>
		  </group>	
		  <group id="Crab">
            <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
            </actions>
          </group>		  
		           
		  <group id="Ticketing">
            <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
			  <action id="action:write">allow</action>
              <action id="action:bulk write">allow</action>
			  <action id="action:delete">allow</action>
              <action id="action:bulk delete">allow</action>
            </actions>
          </group>
   
		  <group id="PrecannedReplies">
			<actions>
			<action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
			  <action id="action:write">allow</action>
              <action id="action:bulk write">allow</action>
			  <action id="action:delete">allow</action>
              <action id="action:bulk delete">allow</action>
            </actions>
          </group>
        </groups>
      </profile>
    </profiles>
  </user_rights>
	</itop_design>



	